/**
 * Class to keep keep track of the signals generated by the strategies.
 * Will mainly be used to calculate P&L of positions.
 */
class Signal {
	/**
	 * Creates a Signal instance
	 * @param {Object} params
	 * @param {Object} params.stock The stock that the signal belongs to
	 * @param {Number} params.price The price where the signal was executed
	 * @param {Date} params.date The date where the signal was executed
	 * @param {String} params.action "buy" or "sell"
	 * @param {String} params.type "enter" or "exit"
	 */
	constructor({ stock, price, date, action, type }) {
		if (
			this.validateInput({
				stock,
				price,
				action,
				type
			})
		) {
			// Class fields:
			// TODO Make private when able to
			this.stock = stock
			/**
			 * The price where the signal was executed
			 * @type {number}
			 */
			this.price = price
			this.date = date instanceof Date ? date : new Date(date)
			this.action = action.toLowerCase()
			this.type = type
			this.status = date === null && price === null ? 'pending' : 'executed'
		} else {
			throw new Error('Required field missing')
		}
	}

	/**
	 * Validates that all the required fields for creating a signal has valid values.
	 * @param {Object} params
	 * @param {Object} params.stock The stock that the signal belongs to
	 * @param {Number} params.price The price where the signal was executed
	 * @param {String} params.action "buy" or "sell"
	 * @param {String} params.type "enter" or "exit"
	 * @returns {Boolean} is the input valid
	 */
	validateInput({ stock, price, action, type }) {
		const isStockValid = Boolean(stock) // This should later on be 'instanceof stock...'
		const isPriceValid = (typeof price === 'number' && price >= 0) || price === null
		const isActionValid =
			typeof action === 'string' &&
			(action.toLowerCase() === 'buy' || action.toLowerCase() === 'sell')
		const isTypeValid =
			typeof type === 'string' &&
			(type.toLowerCase() === 'enter' || type.toLowerCase() === 'exit')

		return isStockValid && isPriceValid && isActionValid && isTypeValid
	}
}

export default Signal
